/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ClaimRouteImport } from './routes/claim'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as VendorsVerifyRouteImport } from './routes/vendors/verify'
import { Route as ComplianceVendorIdRouteImport } from './routes/compliance.$vendorId'
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as VendorsVendorIdIndexRouteImport } from './routes/vendors/$vendorId/index'
import { Route as ProductsProductIdIndexRouteImport } from './routes/products/$productId/index'
import { Route as AdminVendorsIndexRouteImport } from './routes/admin/vendors/index'
import { Route as VendorsVendorIdDashboardRouteImport } from './routes/vendors/$vendorId/dashboard'
import { Route as AdminVendorsVendorIdEditRouteImport } from './routes/admin/vendors/$vendorId/edit'
import { Route as AdminVendorsVendorIdResearchIndexRouteImport } from './routes/admin/vendors/$vendorId/research/index'
import { Route as AdminVendorsVendorIdResearchResearchIdIndexRouteImport } from './routes/admin/vendors/$vendorId/research/$researchId/index'
import { Route as AdminVendorsVendorIdResearchResearchIdDetailsRouteImport } from './routes/admin/vendors/$vendorId/research/$researchId/details'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ClaimRoute = ClaimRouteImport.update({
  id: '/claim',
  path: '/claim',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorsVerifyRoute = VendorsVerifyRouteImport.update({
  id: '/vendors/verify',
  path: '/vendors/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const ComplianceVendorIdRoute = ComplianceVendorIdRouteImport.update({
  id: '/compliance/$vendorId',
  path: '/compliance/$vendorId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorsVendorIdIndexRoute = VendorsVendorIdIndexRouteImport.update({
  id: '/vendors/$vendorId/',
  path: '/vendors/$vendorId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsProductIdIndexRoute = ProductsProductIdIndexRouteImport.update({
  id: '/products/$productId/',
  path: '/products/$productId/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminVendorsIndexRoute = AdminVendorsIndexRouteImport.update({
  id: '/admin/vendors/',
  path: '/admin/vendors/',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorsVendorIdDashboardRoute =
  VendorsVendorIdDashboardRouteImport.update({
    id: '/vendors/$vendorId/dashboard',
    path: '/vendors/$vendorId/dashboard',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminVendorsVendorIdEditRoute =
  AdminVendorsVendorIdEditRouteImport.update({
    id: '/admin/vendors/$vendorId/edit',
    path: '/admin/vendors/$vendorId/edit',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminVendorsVendorIdResearchIndexRoute =
  AdminVendorsVendorIdResearchIndexRouteImport.update({
    id: '/admin/vendors/$vendorId/research/',
    path: '/admin/vendors/$vendorId/research/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminVendorsVendorIdResearchResearchIdIndexRoute =
  AdminVendorsVendorIdResearchResearchIdIndexRouteImport.update({
    id: '/admin/vendors/$vendorId/research/$researchId/',
    path: '/admin/vendors/$vendorId/research/$researchId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminVendorsVendorIdResearchResearchIdDetailsRoute =
  AdminVendorsVendorIdResearchResearchIdDetailsRouteImport.update({
    id: '/admin/vendors/$vendorId/research/$researchId/details',
    path: '/admin/vendors/$vendorId/research/$researchId/details',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/vendors/verify': typeof VendorsVerifyRoute
  '/profile': typeof ProfileIndexRoute
  '/vendors/$vendorId/dashboard': typeof VendorsVendorIdDashboardRoute
  '/admin/vendors': typeof AdminVendorsIndexRoute
  '/products/$productId': typeof ProductsProductIdIndexRoute
  '/vendors/$vendorId': typeof VendorsVendorIdIndexRoute
  '/admin/vendors/$vendorId/edit': typeof AdminVendorsVendorIdEditRoute
  '/admin/vendors/$vendorId/research': typeof AdminVendorsVendorIdResearchIndexRoute
  '/admin/vendors/$vendorId/research/$researchId/details': typeof AdminVendorsVendorIdResearchResearchIdDetailsRoute
  '/admin/vendors/$vendorId/research/$researchId': typeof AdminVendorsVendorIdResearchResearchIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/vendors/verify': typeof VendorsVerifyRoute
  '/profile': typeof ProfileIndexRoute
  '/vendors/$vendorId/dashboard': typeof VendorsVendorIdDashboardRoute
  '/admin/vendors': typeof AdminVendorsIndexRoute
  '/products/$productId': typeof ProductsProductIdIndexRoute
  '/vendors/$vendorId': typeof VendorsVendorIdIndexRoute
  '/admin/vendors/$vendorId/edit': typeof AdminVendorsVendorIdEditRoute
  '/admin/vendors/$vendorId/research': typeof AdminVendorsVendorIdResearchIndexRoute
  '/admin/vendors/$vendorId/research/$researchId/details': typeof AdminVendorsVendorIdResearchResearchIdDetailsRoute
  '/admin/vendors/$vendorId/research/$researchId': typeof AdminVendorsVendorIdResearchResearchIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/vendors/verify': typeof VendorsVerifyRoute
  '/profile/': typeof ProfileIndexRoute
  '/vendors/$vendorId/dashboard': typeof VendorsVendorIdDashboardRoute
  '/admin/vendors/': typeof AdminVendorsIndexRoute
  '/products/$productId/': typeof ProductsProductIdIndexRoute
  '/vendors/$vendorId/': typeof VendorsVendorIdIndexRoute
  '/admin/vendors/$vendorId/edit': typeof AdminVendorsVendorIdEditRoute
  '/admin/vendors/$vendorId/research/': typeof AdminVendorsVendorIdResearchIndexRoute
  '/admin/vendors/$vendorId/research/$researchId/details': typeof AdminVendorsVendorIdResearchResearchIdDetailsRoute
  '/admin/vendors/$vendorId/research/$researchId/': typeof AdminVendorsVendorIdResearchResearchIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/admin/dashboard'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/compliance/$vendorId'
    | '/vendors/verify'
    | '/profile'
    | '/vendors/$vendorId/dashboard'
    | '/admin/vendors'
    | '/products/$productId'
    | '/vendors/$vendorId'
    | '/admin/vendors/$vendorId/edit'
    | '/admin/vendors/$vendorId/research'
    | '/admin/vendors/$vendorId/research/$researchId/details'
    | '/admin/vendors/$vendorId/research/$researchId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/admin/dashboard'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/compliance/$vendorId'
    | '/vendors/verify'
    | '/profile'
    | '/vendors/$vendorId/dashboard'
    | '/admin/vendors'
    | '/products/$productId'
    | '/vendors/$vendorId'
    | '/admin/vendors/$vendorId/edit'
    | '/admin/vendors/$vendorId/research'
    | '/admin/vendors/$vendorId/research/$researchId/details'
    | '/admin/vendors/$vendorId/research/$researchId'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/admin/dashboard'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/verify-email'
    | '/compliance/$vendorId'
    | '/vendors/verify'
    | '/profile/'
    | '/vendors/$vendorId/dashboard'
    | '/admin/vendors/'
    | '/products/$productId/'
    | '/vendors/$vendorId/'
    | '/admin/vendors/$vendorId/edit'
    | '/admin/vendors/$vendorId/research/'
    | '/admin/vendors/$vendorId/research/$researchId/details'
    | '/admin/vendors/$vendorId/research/$researchId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  ClaimRoute: typeof ClaimRoute
  DashboardRoute: typeof DashboardRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
  ComplianceVendorIdRoute: typeof ComplianceVendorIdRoute
  VendorsVerifyRoute: typeof VendorsVerifyRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  VendorsVendorIdDashboardRoute: typeof VendorsVendorIdDashboardRoute
  AdminVendorsIndexRoute: typeof AdminVendorsIndexRoute
  ProductsProductIdIndexRoute: typeof ProductsProductIdIndexRoute
  VendorsVendorIdIndexRoute: typeof VendorsVendorIdIndexRoute
  AdminVendorsVendorIdEditRoute: typeof AdminVendorsVendorIdEditRoute
  AdminVendorsVendorIdResearchIndexRoute: typeof AdminVendorsVendorIdResearchIndexRoute
  AdminVendorsVendorIdResearchResearchIdDetailsRoute: typeof AdminVendorsVendorIdResearchResearchIdDetailsRoute
  AdminVendorsVendorIdResearchResearchIdIndexRoute: typeof AdminVendorsVendorIdResearchResearchIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/claim': {
      id: '/claim'
      path: '/claim'
      fullPath: '/claim'
      preLoaderRoute: typeof ClaimRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendors/verify': {
      id: '/vendors/verify'
      path: '/vendors/verify'
      fullPath: '/vendors/verify'
      preLoaderRoute: typeof VendorsVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/compliance/$vendorId': {
      id: '/compliance/$vendorId'
      path: '/compliance/$vendorId'
      fullPath: '/compliance/$vendorId'
      preLoaderRoute: typeof ComplianceVendorIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendors/$vendorId/': {
      id: '/vendors/$vendorId/'
      path: '/vendors/$vendorId'
      fullPath: '/vendors/$vendorId'
      preLoaderRoute: typeof VendorsVendorIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$productId/': {
      id: '/products/$productId/'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vendors/': {
      id: '/admin/vendors/'
      path: '/admin/vendors'
      fullPath: '/admin/vendors'
      preLoaderRoute: typeof AdminVendorsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendors/$vendorId/dashboard': {
      id: '/vendors/$vendorId/dashboard'
      path: '/vendors/$vendorId/dashboard'
      fullPath: '/vendors/$vendorId/dashboard'
      preLoaderRoute: typeof VendorsVendorIdDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vendors/$vendorId/edit': {
      id: '/admin/vendors/$vendorId/edit'
      path: '/admin/vendors/$vendorId/edit'
      fullPath: '/admin/vendors/$vendorId/edit'
      preLoaderRoute: typeof AdminVendorsVendorIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vendors/$vendorId/research/': {
      id: '/admin/vendors/$vendorId/research/'
      path: '/admin/vendors/$vendorId/research'
      fullPath: '/admin/vendors/$vendorId/research'
      preLoaderRoute: typeof AdminVendorsVendorIdResearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vendors/$vendorId/research/$researchId/': {
      id: '/admin/vendors/$vendorId/research/$researchId/'
      path: '/admin/vendors/$vendorId/research/$researchId'
      fullPath: '/admin/vendors/$vendorId/research/$researchId'
      preLoaderRoute: typeof AdminVendorsVendorIdResearchResearchIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vendors/$vendorId/research/$researchId/details': {
      id: '/admin/vendors/$vendorId/research/$researchId/details'
      path: '/admin/vendors/$vendorId/research/$researchId/details'
      fullPath: '/admin/vendors/$vendorId/research/$researchId/details'
      preLoaderRoute: typeof AdminVendorsVendorIdResearchResearchIdDetailsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  ClaimRoute: ClaimRoute,
  DashboardRoute: DashboardRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
  ComplianceVendorIdRoute: ComplianceVendorIdRoute,
  VendorsVerifyRoute: VendorsVerifyRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  VendorsVendorIdDashboardRoute: VendorsVendorIdDashboardRoute,
  AdminVendorsIndexRoute: AdminVendorsIndexRoute,
  ProductsProductIdIndexRoute: ProductsProductIdIndexRoute,
  VendorsVendorIdIndexRoute: VendorsVendorIdIndexRoute,
  AdminVendorsVendorIdEditRoute: AdminVendorsVendorIdEditRoute,
  AdminVendorsVendorIdResearchIndexRoute:
    AdminVendorsVendorIdResearchIndexRoute,
  AdminVendorsVendorIdResearchResearchIdDetailsRoute:
    AdminVendorsVendorIdResearchResearchIdDetailsRoute,
  AdminVendorsVendorIdResearchResearchIdIndexRoute:
    AdminVendorsVendorIdResearchResearchIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
