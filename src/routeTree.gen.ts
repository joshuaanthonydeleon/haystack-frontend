/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as VendorsRouteImport } from './routes/vendors'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ClaimRouteImport } from './routes/claim'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VendorVerifyRouteImport } from './routes/vendor/verify'
import { Route as VendorDashboardRouteImport } from './routes/vendor/dashboard'
import { Route as VendorVendorIdRouteImport } from './routes/vendor.$vendorId'
import { Route as ProductProductIdRouteImport } from './routes/product.$productId'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as ComplianceVendorIdRouteImport } from './routes/compliance.$vendorId'
import { Route as AuthSignupRouteImport } from './routes/auth.signup'
import { Route as AuthSigninRouteImport } from './routes/auth.signin'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DemoSentryTestingRouteImport } from './routes/demo.sentry.testing'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api.demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const VendorsRoute = VendorsRouteImport.update({
  id: '/vendors',
  path: '/vendors',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ClaimRoute = ClaimRouteImport.update({
  id: '/claim',
  path: '/claim',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorVerifyRoute = VendorVerifyRouteImport.update({
  id: '/vendor/verify',
  path: '/vendor/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorDashboardRoute = VendorDashboardRouteImport.update({
  id: '/vendor/dashboard',
  path: '/vendor/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const VendorVendorIdRoute = VendorVendorIdRouteImport.update({
  id: '/vendor/$vendorId',
  path: '/vendor/$vendorId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductProductIdRoute = ProductProductIdRouteImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const ComplianceVendorIdRoute = ComplianceVendorIdRouteImport.update({
  id: '/compliance/$vendorId',
  path: '/compliance/$vendorId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoSentryTestingRoute = DemoSentryTestingRouteImport.update({
  id: '/demo/sentry/testing',
  path: '/demo/sentry/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/profile': typeof ProfileRoute
  '/vendors': typeof VendorsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/vendor/$vendorId': typeof VendorVendorIdRoute
  '/vendor/dashboard': typeof VendorDashboardRoute
  '/vendor/verify': typeof VendorVerifyRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/profile': typeof ProfileRoute
  '/vendors': typeof VendorsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/vendor/$vendorId': typeof VendorVendorIdRoute
  '/vendor/dashboard': typeof VendorDashboardRoute
  '/vendor/verify': typeof VendorVerifyRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/claim': typeof ClaimRoute
  '/dashboard': typeof DashboardRoute
  '/profile': typeof ProfileRoute
  '/vendors': typeof VendorsRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/compliance/$vendorId': typeof ComplianceVendorIdRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/vendor/$vendorId': typeof VendorVendorIdRoute
  '/vendor/dashboard': typeof VendorDashboardRoute
  '/vendor/verify': typeof VendorVerifyRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/profile'
    | '/vendors'
    | '/admin/dashboard'
    | '/auth/signin'
    | '/auth/signup'
    | '/compliance/$vendorId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/product/$productId'
    | '/vendor/$vendorId'
    | '/vendor/dashboard'
    | '/vendor/verify'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/profile'
    | '/vendors'
    | '/admin/dashboard'
    | '/auth/signin'
    | '/auth/signup'
    | '/compliance/$vendorId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/product/$productId'
    | '/vendor/$vendorId'
    | '/vendor/dashboard'
    | '/vendor/verify'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/claim'
    | '/dashboard'
    | '/profile'
    | '/vendors'
    | '/admin/dashboard'
    | '/auth/signin'
    | '/auth/signup'
    | '/compliance/$vendorId'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/product/$productId'
    | '/vendor/$vendorId'
    | '/vendor/dashboard'
    | '/vendor/verify'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  ClaimRoute: typeof ClaimRoute
  DashboardRoute: typeof DashboardRoute
  ProfileRoute: typeof ProfileRoute
  VendorsRoute: typeof VendorsRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  ComplianceVendorIdRoute: typeof ComplianceVendorIdRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  VendorVendorIdRoute: typeof VendorVendorIdRoute
  VendorDashboardRoute: typeof VendorDashboardRoute
  VendorVerifyRoute: typeof VendorVerifyRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoSentryTestingRoute: typeof DemoSentryTestingRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/demo-names' | '/api/demo-tq-todos'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/demo-names' | '/api/demo-tq-todos'
  id: '__root__' | '/api/demo-names' | '/api/demo-tq-todos'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/vendors': {
      id: '/vendors'
      path: '/vendors'
      fullPath: '/vendors'
      preLoaderRoute: typeof VendorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/claim': {
      id: '/claim'
      path: '/claim'
      fullPath: '/claim'
      preLoaderRoute: typeof ClaimRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/verify': {
      id: '/vendor/verify'
      path: '/vendor/verify'
      fullPath: '/vendor/verify'
      preLoaderRoute: typeof VendorVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/dashboard': {
      id: '/vendor/dashboard'
      path: '/vendor/dashboard'
      fullPath: '/vendor/dashboard'
      preLoaderRoute: typeof VendorDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vendor/$vendorId': {
      id: '/vendor/$vendorId'
      path: '/vendor/$vendorId'
      fullPath: '/vendor/$vendorId'
      preLoaderRoute: typeof VendorVendorIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/compliance/$vendorId': {
      id: '/compliance/$vendorId'
      path: '/compliance/$vendorId'
      fullPath: '/compliance/$vendorId'
      preLoaderRoute: typeof ComplianceVendorIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/sentry/testing': {
      id: '/demo/sentry/testing'
      path: '/demo/sentry/testing'
      fullPath: '/demo/sentry/testing'
      preLoaderRoute: typeof DemoSentryTestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  ClaimRoute: ClaimRoute,
  DashboardRoute: DashboardRoute,
  ProfileRoute: ProfileRoute,
  VendorsRoute: VendorsRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  ComplianceVendorIdRoute: ComplianceVendorIdRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  VendorVendorIdRoute: VendorVendorIdRoute,
  VendorDashboardRoute: VendorDashboardRoute,
  VendorVerifyRoute: VendorVerifyRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoSentryTestingRoute: DemoSentryTestingRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
